mat-card{
    margin: 1%;
    border-bottom: 3px solid transparent;
    border-top: 3px solid transparent;
   
  }
   
  .container {
    /* width: 80%; */
  text-align: center;
   
    /* margin: 50px auto;
    background-color: #fff; */
    /* padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1); */
  }
  .container h3 {
    /* color: #333; */
    /* border-bottom: 2px solid #333; */
    font-size: large;
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-weight:600;
   
    padding-bottom: 10px;
    margin-bottom: 20px;
  }
  button{
    margin: 3px;
  }
  ng-container{
    text-align: center;
  }
  th{
    background-color: #7db855be !important;
    color: #141E46;
    font-weight: 700;
    white-space: nowrap;
    text-shadow: #ffffff;
   
    font-family: Roboto, "Helvetica Neue", sans-serif;
    text-align: center;
  }
  td{
     font-size: 14px;
   
     white-space: nowrap;
  padding: 8px;
  /* border: 3px solid whitesmoke; */
  font-family: Roboto, "Helvetica Neue", sans-serif;
   
  }
  .mat-mdc-form-field {
    font-size: 20px;
    width: 50%;
  }
   
  mat-card-content th, mat-card-content td{
   
  padding: 8px;
  text-align: center;
  }
   
  mat-card-content tr:nth-child(even)
  {
  background-color: #f2f2f2;
   
  }
   
  mat-card-content tr:nth-child(odd)
  {
  background-color: #ffffff;
  }
  .demo-table {
    width: 100%;
    height: 50%;
  }
  .search {
    position: relative;
    color: #aaa;
    font-size: 16px;
    }
   
    .search {display: inline-block;}
   
    .search input {
    width: 250px;
    height: 32px;
    border: 1px solid #aaa;
    border-radius: 5px;
    }
   
    .search input { text-indent: 5px;}
    .search .fa-search {
    position: absolute;
    top: 10px;
    left: 10px;
    }
   
    .search .fa-search {left: auto; right: 10px;}
   
   
  .demo-row-is-clicked {
    font-weight: bold;
  }
   
  .left
  {
    margin-left:30px;
    margin-bottom: 20px;
   
  }
  .mat-mdc-table .mdc-data-table__header-row {
    height: 0px;
    background-color: antiquewhite;
    /* background: linear-gradient(180deg, rgba(17, 197, 77, 0.548) 0%, rgb(82, 143, 89) 100%); */
    color: white;
  }
   
  .mat-mdc-table .mdc-data-table__row {
    height: 0px;
  }


   
.form {
    --input-bg: #FFf;
  /*  background of input */
    --padding: 1.5em;
    --rotate: 80deg;
  /*  rotation degree of input*/
    --gap: 2em;
    /*  gap of items in input */
    --icon-change-color: #15A986;
  /*  when rotating changed icon color */
    --height: 40px;
  /*  height */
    width: 250px;
    padding-inline-end: 1em;
  /*  change this for padding in the end of input */
    background: var(--input-bg);
    position: relative;
    border-radius: 15px;
  }
   
  .form label {
    display: flex;
    align-items: center;
    width: 100%;
    height: var(--height);
  }
   
  .form input {
    width: 100%;
    padding-inline-start: calc(var(--padding) + var(--gap));
    outline: none;
    background: none;
    border: 0;
  }
  /* style for both icons -- search,close */
  .form svg {
    /* display: block; */
    color: #111;
    transition: 0.3s cubic-bezier(.4,0,.2,1);
    position: absolute;
    height: 15px;
  }
  /* search icon */
  .icon {
    position: absolute;
    left: var(--padding);
    transition: 0.3s cubic-bezier(.4,0,.2,1);
    display: flex;
    justify-content: center;
    align-items: center;
  }
  /* arrow-icon*/
  .swap-off {
    transform: rotate(-80deg);
    opacity: 0;
    visibility: hidden;
  }
  /* close button */
  .close-btn {
    /* removing default bg of button */
    background: none;
    border: none;
    right: calc(var(--padding) - var(--gap));
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #111;
    padding: 0.1em;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    transition: 0.3s;
    opacity: 0;
    transform: scale(0);
    visibility: hidden;
  }
   
  .form input:focus ~ .icon {
    transform: rotate(var(--rotate)) scale(1.3);
  }
   
  .form input:focus ~ .icon .swap-off {
    opacity: 1;
    transform: rotate(-80deg);
    visibility: visible;
    color: var(--icon-change-color);
  }
   
  .form input:focus ~ .icon .swap-on {
    opacity: 0;
    visibility: visible;
  }
   
  .form input:valid ~ .icon {
    transform: scale(1.3) rotate(var(--rotate))
  }
   
  .form input:valid ~ .icon .swap-off {
    opacity: 1;
    visibility: visible;
    color: var(--icon-change-color);
  }
   
  .form input:valid ~ .icon .swap-on {
    opacity: 0;
    visibility: visible;
  }
   
  .form input:valid ~ .close-btn {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
    transition: 0s;
  }